name: Publish Docker image
env:
  DEPLOY_PACKAGE_NAME : "magento-api-platform-${{ github.sha }}"
  DEPLOY_VERSION : "v0.0.1"
  DEPLOY_FOLDER : "docker"
  MYSQL_HOST: 127.0.0.1
  MYSQL_ROOT_PASSWORD : magento2
  MYSQL_DATABASE : "api_magento"
  MYSQL_USER : "magento2"
  MYSQL_PASSWORD : "magento2"
  MYSQL_PORT : 3306

#on:
#  release:
#    types: [published]

on:
  workflow_dispatch: {}
  push:
    #branches: [main]
    tags:
        - 'v*'

jobs:
  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    services:
      mysql:
        image: mysql:8.0
        env:
          # The MySQL docker container requires these environment variables to be set
          # so we can create and migrate the test database.
          # See: https://hub.docker.com/_/mysql
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: api_magento
          MYSQL_USER: magento2
          MYSQL_PASSWORD: magento2
        ports:
          # Opens port 3306 on service container and host
          # https://docs.github.com/en/actions/using-containerized-services/about-service-containers
          - 3306:3306
          # Before continuing, verify the mysql container is reachable from the ubuntu host
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: 01. Check out the repo
        uses: actions/checkout@v3
        
      - name: Wait for DB to be ready
        run: |
          for i in {1..10}; do
            nc -z localhost 3306 && echo "Database is ready!" && exit 0
            echo "Waiting for database to be ready..."
            sleep 3
          done
          exit 1
          
      - name: Show database
        run: |
          mysql -h 127.0.0.1 -P 3306 -u magento2 -pmagento2 -e "SHOW DATABASES;"              
          
      - name: Create database and tables
        run: |
          mysql -h 127.0.0.1 -u magento2 -pmagento2 -e "CREATE TABLE api_magento.example (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL);"    
            
      - name: 02. Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 03. Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}

      - name: 04. Execute few commands
        run : |
          echo "Deploy package name: ${{ env.DEPLOY_PACKAGE_NAME }}"
          echo "Deploy version: ${{ env.DEPLOY_VERSION }}"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Labels: ${{ steps.meta.outputs.labels }}"

      - name: 05. Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: ./api
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
